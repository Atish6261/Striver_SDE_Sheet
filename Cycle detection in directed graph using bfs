#include<bits/stdc++.h>
int detectCycleInDirectedGraph(int n, vector < pair < int, int >> & edges) {
 vector<int>adj[n+1];
 vector<int>indegree(n+1,0);
 for(auto it:edges){
   int u=it.first;
   int v=it.second;
   adj[u].push_back(v);
   indegree[v]++;
 }
 vector<int>topo;
 queue<int>q;
 for(int i=1;i<=n;i++){
   if(indegree[i]==0) q.push(i);
 }
 while(!q.empty()){
   int node=q.front();
   q.pop();
   topo.push_back(node);
   for(auto it:adj[node]){
     indegree[it]--;
     if(indegree[it]==0) q.push(it);
   }
 }

if(topo.size()==n) return 0;
return 1;
}
