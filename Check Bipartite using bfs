class Solution {
public:
    bool bfs(int node,vector<vector<int>>& graph,vector<int>&col,int color){
        col[node]=color;
    queue<int>q;
        q.push(node);
        while(!q.empty()){
            int curr=q.front();
            q.pop();
            for(auto it:graph[curr]){
               if(col[it]==-1){
                   col[it]=!col[curr];
                   q.push(it);
               }else if(col[it]==col[curr]) return false;
            }
        }
        return true;
            }
    
    bool isBipartite(vector<vector<int>>& graph) {
        int n=graph.size();
        vector<int>col(n,-1);
        for(int i=0;i<n;i++){
            if(col[i]==-1){
                if(bfs(i,graph,col,0)==false) return false;
       
        
        
        }
        }
        return true;
    }
};
